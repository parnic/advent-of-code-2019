// Code generated by "stringer -type=cellStatus,responseType,dirType -output=15_types_string.go"; DO NOT EDIT.

package days

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[cellStatusUnknown-0]
	_ = x[cellStatusWall-1]
	_ = x[cellStatusOpen-2]
	_ = x[cellStatusGoal-3]
}

const _cellStatus_name = "cellStatusUnknowncellStatusWallcellStatusOpencellStatusGoal"

var _cellStatus_index = [...]uint8{0, 17, 31, 45, 59}

func (i cellStatus) String() string {
	if i < 0 || i >= cellStatus(len(_cellStatus_index)-1) {
		return "cellStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _cellStatus_name[_cellStatus_index[i]:_cellStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[responseWall-0]
	_ = x[responseSuccess-1]
	_ = x[responseFoundGoal-2]
}

const _responseType_name = "responseWallresponseSuccessresponseFoundGoal"

var _responseType_index = [...]uint8{0, 12, 27, 44}

func (i responseType) String() string {
	if i < 0 || i >= responseType(len(_responseType_index)-1) {
		return "responseType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _responseType_name[_responseType_index[i]:_responseType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[dirNorth-1]
	_ = x[dirSouth-2]
	_ = x[dirWest-3]
	_ = x[dirEast-4]
}

const _dirType_name = "dirNorthdirSouthdirWestdirEast"

var _dirType_index = [...]uint8{0, 8, 16, 23, 30}

func (i dirType) String() string {
	i -= 1
	if i < 0 || i >= dirType(len(_dirType_index)-1) {
		return "dirType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _dirType_name[_dirType_index[i]:_dirType_index[i+1]]
}
